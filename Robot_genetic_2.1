#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 79 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 214 214 214 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 219 123 85 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 63 69 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 85 181 219 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 85 181 219 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 116 196 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 65 83 91 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 159 202 86 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 214 214 214 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 219 123 85 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 85 219 190 0 0 0 -1 -1 2
42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 67 165 213 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 63 69 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 214 214 214 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 63 69 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 85 219 190 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 159 202 86 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 63 69 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 116 196 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 85 181 219 0 0 0 -1 -1 2
47 #"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 219 123 85 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 230 205 105 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 63 69 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 138 85 63 0 0 0 -1 -1 2 26
#"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 159 202 86 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 63 69 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 159 202 86 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 63 69 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 4
32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 58 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 185 220 113 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 155 255 155 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 116 116 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 18 67 155 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 30 70 190 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 135 185 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 208 208 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 116 116 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 125 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 143 15 223 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 141 19 5 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 244 194 71 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 127 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 86 86 86 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 255 255 0 0 0
-1 -1           0 8221 0 17 3 44
#";(simulate <state> <expr> <program> <limit>)"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";<state> is a state of the robot of the form: (<maze> (<coordinate-x"
 #"> <coordinate-y>) <orientation>)"
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";<expr> can content form, command, or procedure call."
0 0 24 29 1 #"\n"
0 0 17 3 53 #";<program> can content list of procedure definitions."
0 0 24 29 1 #"\n"
0 0 17 3 137
(
 #";<limit> is a number which means maximum nested procedure calls. If "
 #"a new procedure call exceeds the limit then this call cannot be done"
 #"."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"is-less?"
0 0 24 3 1 #" "
0 0 14 3 4 #"elem"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"elem"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"elem"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"elem"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 8 #"is-less?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"elem"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"get-nth"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #")) ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #") ("
0 0 14 3 7 #"newline"
0 0 24 3 3 #") ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 7 #"newline"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"get-nth"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"simulate"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"wall?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 23 #"get-coords-at-direction"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"do-turn-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"north"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"west"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"west"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"south"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"south"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"east"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #")  "
0 0 21 3 1 #"'"
0 0 14 3 4 #"east"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"north"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mark?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-marks"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"passable?"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 1 #" "
0 0 14 3 6 #"ls_map"
0 0 24 3 1 #" "
0 0 14 3 17 #"ls_current_coords"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"curr_x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 17 #"ls_current_coords"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"curr_y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 17 #"ls_current_coords"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"ls_map"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 29 #";Need to extract the row-list"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"ls_map"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 32 #";I have only the row-list by now"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"ls_map"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"ls_map"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 46 #";Do not have the row-list yet! Gotta go deeper"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 25 #";The next is the row-list"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"ls_map"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 20 #";Gotta go deeeeeeper"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"ls_map"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"get-coords-at-direction"
0 0 24 3 1 #" "
0 0 14 3 11 #"curr_coords"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 11 #"curr_coords"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"curr_x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 11 #"curr_coords"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"curr_y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 11 #"curr_coords"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"north"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"south"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"west"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 6 #"curr_y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"east"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 6 #"curr_y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reporterr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"I do not know this direction! \""
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 43 #";Output - (new-executed-commands new-state)"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"custom-keyword"
0 0 24 3 2 #"  "
0 0 14 3 7 #"keyword"
0 0 24 3 2 #"  "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #"  "
0 0 14 3 17 #"executed-commands"
0 0 24 3 2 #"  "
0 0 14 3 13 #"robot-program"
0 0 24 3 2 #"  "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 12 #"error-output"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 2 #") "
0 0 14 3 12 #"error-output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 13 #"robot-program"
0 0 24 3 2 #") "
0 0 14 3 12 #"error-output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 13 #"robot-program"
0 0 24 3 3 #")) "
0 0 14 3 12 #"error-output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 13 #"robot-program"
0 0 24 3 2 #") "
0 0 14 3 7 #"keyword"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 13 #"robot-program"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 13 #"robot-program"
0 0 24 3 2 #") "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 12 #"error-output"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"custom-keyword"
0 0 24 3 1 #" "
0 0 14 3 7 #"keyword"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 13 #"robot-program"
0 0 24 3 2 #") "
0 0 14 3 5 #"depth"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"do-step"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #") "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"maze"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 12 #"old-location"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"robot-x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"old-location"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"robot-y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 12 #"old-location"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"orientation"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 12 #"new_location"
0 0 24 3 2 #" ("
0 0 14 3 23 #"get-coords-at-direction"
0 0 24 3 1 #" "
0 0 14 3 12 #"old-location"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"passable?"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 1 #" "
0 0 14 3 12 #"new_location"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 1 #" "
0 0 14 3 12 #"new_location"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 66
#";Pass in #t or #f to add or remove mark from location respectively"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"edit-mark"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 3 #"add"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"edit_mark_on_location"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"curr_x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"curr_y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 21 #"edit_mark_on_location"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"add"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            )"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        )"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 21 #"edit_mark_on_location"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 21 #"edit_mark_on_location"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 21 #"edit_mark_on_location"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 20 #";Gotta go deeeeeeper"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 21 #"edit_mark_on_location"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"maze"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"curr_y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 21 #"edit_mark_on_location"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-marks"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 16 #"get-val-at-robot"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-val-at-robot"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 17 #"get-val-at-coords"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"my-append"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls1"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls2"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls1"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls1"
0 0 24 3 2 #") "
0 0 14 3 3 #"ls2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"north?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"north"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 12 #"error-output"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 2 #") "
0 0 14 3 12 #"error-output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"'0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"step"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"wall?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 12 #";It crashed:"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 12 #"error-output"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 8 #";Do-step"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 7 #"do-step"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 2 #") "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 12 #"do-turn-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 2 #") "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"put-mark"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 9 #"edit-mark"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"put-mark"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 2 #") "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"get-mark"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mark?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 9 #"edit-mark"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"get-mark"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 2 #") "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 12 #"error-output"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"cddddr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #")) "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"statement"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"condition"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 9 #"statement"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 8 #"positive"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"statement"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 8 #"negative"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"statement"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"condition"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"north?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"north?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"my-append"
0 0 24 3 1 #" "
0 0 14 3 8 #"positive"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #")) "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"my-append"
0 0 24 3 1 #" "
0 0 14 3 8 #"negative"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #")) "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"condition"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"mark?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mark?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"my-append"
0 0 24 3 1 #" "
0 0 14 3 8 #"positive"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #")) "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"my-append"
0 0 24 3 1 #" "
0 0 14 3 8 #"negative"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #")) "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"condition"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"wall?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"wall?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"my-append"
0 0 24 3 1 #" "
0 0 14 3 8 #"positive"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #")) "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"my-append"
0 0 24 3 1 #" "
0 0 14 3 8 #"negative"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #")) "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 12 #"error-output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"               )    "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 35 #";It is a custom command -> find it:"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 14 #"custom-keyword"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 2 #") "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 14 3 17 #"executed-commands"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               )"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 15 #"expression-list"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #") "
0 0 14 3 5 #"depth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               )"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 2 #") "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 17 #"parse-expressions"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"evaluate"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 1 #" "
0 0 14 3 10 #"thresholds"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 7 #";Tested"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"get-"
0 0 14 3 8 #"commands"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-commands"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"get-commands"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-commands"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"get-commands"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cdddr"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-commands"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"get-commands"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-commands"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 7 #";Tested"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"test-state"
0 0 24 3 1 #" "
0 0 14 3 6 #"actual"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-map"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-row"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"test-elem"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 9 #"test-elem"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")) "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-row"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-row"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 3 3 #")) "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-map"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"test-robot"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"test-orientation"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"test-coordinates"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 16 #"test-orientation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"test-coordinates"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-map"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"actual"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"test-robot"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"actual"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"testProgram"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 11 #"\"Testing: \""
0 0 17 3 3 #") ("
0 0 17 3 7 #"newline"
0 0 17 3 3 #") ("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 3 #") ("
0 0 17 3 8 #"newline)"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"testPairs"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 1 #" "
0 0 14 3 9 #"manhattan"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 14 #"command-length"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"manhattan"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 14 #"command-length"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 8 #"our-pair"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"source"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"our-pair"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"goal"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 8 #"our-pair"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"simulation"
0 0 24 3 2 #" ("
0 0 14 3 8 #"simulate"
0 0 24 3 1 #" "
0 0 14 3 6 #"source"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 10 #"test-state"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 10 #"simulation"
0 0 24 3 2 #") "
0 0 14 3 4 #"goal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 13 #"new-manhattan"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"manhattan"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"new-state"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 18 #"new-command-length"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 14 #"command-length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"simulation"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-manhattan"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"thresholds"
0 0 24 3 4 #")) ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-state"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 10 #"thresholds"
0 0 24 3 4 #")) ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 18 #"new-command-length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 10 #"thresholds"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"testPairs"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 2 #") "
0 0 14 3 13 #"new-manhattan"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-state"
0 0 24 3 1 #" "
0 0 14 3 18 #"new-command-length"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 14 #"command-length"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-commands"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 14 #"command-length"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 10 #"thresholds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 9 #"testPairs"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #") ("
0 0 14 3 12 #"get-commands"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"insert-sort"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"is-less?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 3 #") ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 3 #") ("
0 0 14 3 11 #"insert-sort"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"is-invalid?"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #") "
0 0 21 3 3 #"'-1"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"is-invalid?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"evaluatePrograms"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 11 #"testProgram"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"is-invalid?"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"evaluatePrograms"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"insert-sort"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"evaluatePrograms"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"          )      "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"evaluatePrograms"
0 0 24 3 1 #" "
0 0 14 3 8 #"programs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";----------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"congruential-rng"
0 0 24 3 1 #" "
0 0 14 3 4 #"seed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 5 #"16807"
0 0 24 3 1 #" "
0 0 17 3 14 #"#|(expt 7 5)|#"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 10 #"2147483647"
0 0 24 3 1 #" "
0 0 17 3 21 #"#|(- (expt 2 31) 1)|#"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"m-1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"seed"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 1 #" "
0 0 14 3 4 #"seed"
0 0 24 3 1 #" "
0 0 14 3 3 #"m-1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 4 #"seed"
0 0 24 3 2 #") "
0 0 14 3 1 #"m"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"seed"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 3 #"m-1"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 16 #"congruential-rng"
0 0 24 3 1 #" "
0 0 21 3 5 #"12345"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-procedure-list"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"get-procedure-list-inner"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 14 3 2 #"ls"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 24 #"get-procedure-list-inner"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 14 3 2 #"ls"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 24 #"get-procedure-list-inner"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 7 #"program"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"contains?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 4 #"elem"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 4 #"elem"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"contains?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 4 #"elem"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"validate"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #";("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 14 #"\"Validating: \""
0 0 17 3 3 #") ("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 7 #"newline"
0 0 17 3 3 #") ("
0 0 17 3 13 #"flush-output)"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 14 3 4 #"prog"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")) "
0 0 14 3 4 #"prog"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #")) ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cdddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 6 #")))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cdddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cdddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"remove-empty-procedures"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"remove-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"inner-procedure"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 14 3 9 #"procedure"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 15 #"inner-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 15 #"inner-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"inner-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 14 3 15 #"inner-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 15 #"inner-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 9 #")))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 3 #") ("
0 0 14 3 23 #"remove-empty-procedures"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #") "
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"procedure"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 3 #") ("
0 0 14 3 15 #"inner-procedure"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"left"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"browse-procedures"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 2 #") "
0 0 14 3 4 #"prog"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"start"
0 0 24 3 3 #") ("
0 0 14 3 17 #"browse-procedures"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"remove-procedure"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 17 #"browse-procedures"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 17 #"browse-procedures"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"for-each-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 14 3 4 #"call"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 14 3 4 #"prog"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"procedure"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 3 #") ("
0 0 14 3 4 #"call"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"call"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 18 #"for-each-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 14 3 4 #"call"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"for-each-procedure"
0 0 24 3 2 #" ("
0 0 14 3 23 #"remove-empty-procedures"
0 0 24 3 2 #" ("
0 0 14 3 18 #"for-each-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 3 #")) "
0 0 14 3 26 #"remove-additional-brackets"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 8 #"validate"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-call?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"      (("
0 0 17 3 6 #"equal?"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"start"
0 0 17 3 2 #") "
0 0 17 3 2 #"#t"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"      (("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 2 #"#f"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"      (("
0 0 17 3 6 #"equal?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 2 #") "
0 0 17 3 2 #"#t"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"      (("
0 0 17 3 5 #"list?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-call?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 4 #"call"
0 0 17 3 3 #") ("
0 0 17 3 9 #"has-call?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 4 #"call"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 21 #"remove-procedure-call"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"      (("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"      (("
0 0 17 3 6 #"equal?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"      (("
0 0 17 3 5 #"list?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 21 #"remove-procedure-call"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 4 #"call"
0 0 17 3 3 #") ("
0 0 17 3 21 #"remove-procedure-call"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 4 #"call"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"remove-procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 4 #"prog"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"            ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 21 #"remove-procedure-call"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 16 #"remove-procedure"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 9 #"procedure"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 19 #"validate-procedures"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #" "
0 0 17 3 14 #"procedure-list"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 14 #"procedure-list"
0 0 17 3 2 #") "
0 0 17 3 4 #"prog"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-call?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 14 #"procedure-list"
0 0 17 3 4 #")) ("
0 0 17 3 19 #"validate-procedures"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 14 #"procedure-list"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"            ("
0 0 17 3 19 #"validate-procedures"
0 0 17 3 2 #" ("
0 0 17 3 16 #"remove-procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 14 #"procedure-list"
0 0 17 3 4 #")) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 14 #"procedure-list"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 3 9 #"  (define"
0 0 17 3 2 #" ("
0 0 17 3 22 #"erase-empty-procedures"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"    (define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"inner"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"      (cond"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"        ((null?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 7 #"program"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        (("
0 0 17 3 8 #"equal? ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"start"
0 0 17 3 3 #") ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        (("
0 0 17 3 5 #"null?"
0 0 17 3 8 #" (caddar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 4 #")) ("
0 0 17 3 22 #"erase-empty-procedures"
0 0 17 3 2 #" ("
0 0 17 3 16 #"remove-procedure"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 10 #"inner (cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"inner"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 20 #"erase-empty-brackets"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"inner"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #"))) "
0 0 17 3 9 #"procedure"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"caar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cdddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #")))) ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 4 #"prog"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"procedure"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 5 #"))) ("
0 0 17 3 20 #"erase-empty-brackets"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        ))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 15 #"bracket-singles"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"inner"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 9 #"procedure"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cadr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cdddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #") "
0 0 17 3 4 #"prog"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 5 #"))) ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"procedure"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 4 #")) ("
0 0 17 3 15 #"bracket-singles"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"            ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"procedure"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 5 #"))) ("
0 0 17 3 15 #"bracket-singles"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-start"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 3 #"let"
0 0 17 3 3 #" (("
0 0 17 3 2 #"ls"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-procedure-list"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 9 #"contains?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ls"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"start"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"start"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 2 #"ls"
0 0 17 3 4 #"))) "
0 0 17 3 4 #"prog"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"          "
0 0 17 3 4 #"prog"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") '"
0 0 17 3 2 #"(("
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 10 #"start ()))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 9 #"has-start"
0 0 17 3 2 #" ("
0 0 17 3 15 #"bracket-singles"
0 0 17 3 2 #" ("
0 0 17 3 20 #"erase-empty-brackets"
0 0 17 3 2 #" ("
0 0 17 3 22 #"erase-empty-procedures"
0 0 17 3 2 #" ("
0 0 17 3 19 #"validate-procedures"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-procedure-list"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 8 #"))))))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"mutate"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #";("
0 0 17 3 9 #"display \""
0 0 17 3 9 #"Mutating:"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 3 #") ("
0 0 17 3 7 #"newline"
0 0 17 3 3 #") ("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 18 #"program) (newline)"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"validate"
0 0 24 3 2 #" ("
0 0 14 3 11 #"call-mutate"
0 0 24 3 2 #" ("
0 0 14 3 8 #"validate"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"call-mutate"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"get-highest-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 6 #"result"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 6 #"result"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-procedure-list"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 3 #")  "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"add-procedure-call"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"get-procedure-from-list"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 23 #"get-procedure-from-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 14 #"procedure-list"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-procedure-list"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 23 #"get-procedure-from-list"
0 0 24 3 1 #" "
0 0 14 3 14 #"procedure-list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 14 #"procedure-list"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"add-if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-question"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"rand"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"wall?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 6 #"north?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"mark?"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 3 #") ("
0 0 14 3 4 #"step"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-question"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"rand"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"step"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 18 #"add-procedure-call"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"put-mark"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"get-mark"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"add-if"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"add-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 33 #";Create function with random call"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 49 #";Place function call at random place of 1st level"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"place-call"
0 0 24 3 1 #" "
0 0 14 3 9 #"func-name"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"place-in-procedure"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"goto-place"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 10 #"goto-place"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 14 3 9 #"func-name"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 14 3 9 #"func-name"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"func-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"goto-place"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"procedure"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"select-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 18 #"place-in-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 16 #"select-procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"createProcedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 21 #"get-highest-procedure"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 15 #"createProcedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"new-prog"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"place-call"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 8 #"new-prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-element"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"find-place"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 17 3 42 #";Calls add-call at random point of program"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"find-place-inner"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"handle-condition"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 16 #"find-place-inner"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"cdddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 16 #"find-place-inner"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"cddddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"goto-place"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"rand"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 2 #") "
0 0 14 3 4 #"rest"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 16 #"handle-condition"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 2 #") "
0 0 14 3 4 #"rest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 10 #"goto-place"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"add-call"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"rand"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 2 #") "
0 0 14 3 4 #"rest"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 16 #"handle-condition"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 5 #")) ))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"goto-place"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 2 #") "
0 0 14 3 4 #"rest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-call"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 16 #"find-place-inner"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"select-procedure"
0 0 24 3 2 #") "
0 0 17 3 46 #";Calls find-place on randomly chosen procedure"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"select-procedure-inner"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"find-place"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 22 #"select-procedure-inner"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 22 #"select-procedure-inner"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 16 #"select-procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"add-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"add-element"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"fi"
0 0 14 3 7 #"nd-call"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stand-on"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 5 #"go-to"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 6 #")))) ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 5 #"go-to"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stand-on"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"go-to"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"WTF: \""
0 0 24 3 3 #") ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"go-to"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 14 3 9 #"procedure"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 3 #") ("
0 0 14 3 8 #"stand-on"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 8 #"stand-on"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 5 #"go-to"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #") ("
0 0 14 3 5 #"go-to"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"select-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"procedure"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 9 #"find-call"
0 0 24 3 2 #" ("
0 0 14 3 6 #"caddar"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 16 #"select-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"select-procedure"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"remove"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"find-call"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"inner"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"inner-browse"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 2 #"()"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 4 #"caar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"                          ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cdar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"                          ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"                              ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                                  ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 12 #"inner-browse"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #")))) ("
0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cdddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 5 #"))) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                                  ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 12 #"inner-browse"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cdddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cdddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 8 #")))))) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 12 #"inner-browse"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"          "
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #")) "
0 0 17 3 1 #"'"
0 0 17 3 2 #"()"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"            ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cadr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 12 #"inner-browse"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #")))) ("
0 0 17 3 6 #"cadddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cadr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 12 #"inner-browse"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cadddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cadddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 12 #"inner-browse"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"procedure"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cadr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 5 #"inner"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"select-procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 9 #"find-call"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 4 #")) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 16 #"select-procedure"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 16 #"select-procedure"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"  |#"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"remove"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"find-call"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 15 #"find-call-inner"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 7 #"newline"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #") "
0 0 17 3 9 #"procedure"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"            ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"                        ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 15 #"find-call-inner"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #")))) ("
0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cdddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 5 #"))) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"                            ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cadar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 6 #"caddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 15 #"find-call-inner"
0 0 17 29 1 #"\n"
0 0 17 3 83
(
 #"                                                                    "
 #"              ("
) 0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cdddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #")) ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cdddar"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 8 #")))))) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 15 #"find-call-inner"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 5 #"list?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"procedure"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cadr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 15 #"find-call-inner"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 9 #"find-call"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"procedure"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cadr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 5 #"caddr"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"select-procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 9 #"find-call"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 4 #")) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"          ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 16 #"select-procedure"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 4 #"prog"
0 0 17 3 3 #") ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 16 #"select-procedure"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"  |#"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"north?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #") ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"validate"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"validate"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"evolve"
0 0 17 3 1 #" "
0 0 17 3 7 #"<pairs>"
0 0 17 3 1 #" "
0 0 17 3 11 #"<threshold>"
0 0 17 3 1 #" "
0 0 17 3 12 #"<stack_size>"
0 0 17 3 2 #") "
0 0 17 3 5 #"where"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"<pairs>"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 5 #"pairs"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 6 #"states"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 9 #"including"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"position"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 11 #"orientation"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"robot"
0 0 17 3 1 #";"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"<threshold>"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 5 #"lower"
0 0 17 3 1 #" "
0 0 17 3 6 #"bounds"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"quality"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"order"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 6 #"appear"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"output"
0 0 17 3 1 #";"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"<stack_size>"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"limit"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"robot"
0 0 17 3 1 #" "
0 0 17 3 9 #"simulator"
0 0 17 3 1 #" "
0 0 17 3 5 #"stack"
0 0 17 3 1 #" "
0 0 17 3 5 #"size."
0 0 17 3 3 #" |#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"evolve"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 1 #" "
0 0 14 3 10 #"thresholds"
0 0 24 3 1 #" "
0 0 14 3 10 #"stack-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"POPSIZE"
0 0 24 3 2 #") "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-initial"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-start"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 3 #") ("
0 0 14 3 4 #"step"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"mark?"
0 0 24 3 5 #" () ("
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"put-mark"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-mark"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 10 #"turn-right"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 3 #")) "
0 0 14 3 4 #"step"
0 0 24 3 3 #")) "
0 0 14 3 4 #"step"
0 0 24 3 2 #") "
0 0 14 3 8 #"put-mark"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 10 #"turn-right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 10 #"turn-north"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"north?"
0 0 24 3 5 #" () ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 10 #"turn-north"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 7 #"add-one"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"mark?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-mark"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 7 #"add-one"
0 0 24 3 1 #" "
0 0 14 3 8 #"turn-180"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 8 #"turn-180"
0 0 24 3 3 #") ("
0 0 14 3 8 #"put-mark"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 8 #"turn-180"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 3 #") ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"mark?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-mark"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 8 #"turn-180"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 8 #"turn-180"
0 0 24 3 3 #") ("
0 0 14 3 8 #"put-mark"
0 0 24 3 5 #"))) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 8 #"turn-180"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 1 #" "
0 0 14 3 8 #"put-mark"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 9 #"fill-maze"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 9 #"fill-maze"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"mark?"
0 0 24 3 5 #" () ("
0 0 14 3 8 #"put-mark"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 5 #" () ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 9 #"fill-maze"
0 0 24 3 1 #" "
0 0 14 3 9 #"step-back"
0 0 24 3 3 #")) "
0 0 14 3 9 #"turn-left"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 5 #" () ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 9 #"fill-maze"
0 0 24 3 1 #" "
0 0 14 3 9 #"step-back"
0 0 24 3 3 #")) "
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 5 #" () ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 9 #"fill-maze"
0 0 24 3 1 #" "
0 0 14 3 9 #"step-back"
0 0 24 3 3 #")) "
0 0 14 3 9 #"turn-left"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 9 #"step-back"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 5 #" () ("
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 8 #"put-mark"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 8 #"put-mark"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 8 #"put-mark"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 3 #") ("
0 0 14 3 4 #"step"
0 0 24 3 3 #")) "
0 0 14 3 5 #"start"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 10 #"turn-north"
0 0 24 3 1 #" "
0 0 14 3 2 #"go"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 2 #"go"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 5 #" () ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 2 #"go"
0 0 24 3 6 #")))) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 10 #"turn-north"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"north?"
0 0 24 3 5 #" () ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 10 #"turn-north"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 8 #"go-north"
0 0 24 3 1 #" "
0 0 14 3 2 #"go"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 2 #"go"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 2 #"go"
0 0 24 3 3 #") ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 8 #"go-north"
0 0 24 3 1 #" "
0 0 14 3 2 #"go"
0 0 24 3 6 #")))) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 8 #"go-north"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"north?"
0 0 24 3 5 #" () ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 8 #"go-north"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          ))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"load-start"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 3 #") ("
0 0 14 3 7 #"POPSIZE"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"load-start"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 3 #") ("
0 0 14 3 7 #"POPSIZE"
0 0 24 3 3 #")) "
0 0 14 3 10 #"population"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"load-start"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-start"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"load-start"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-next-pop"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-pop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cut"
0 0 24 3 1 #" "
0 0 14 3 10 #"percentage"
0 0 24 3 2 #") "
0 0 17 3 45 #";Cuts bottom [percentage] percent of programs"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 9 #"threshold"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 9 #"threshold"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #") ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 9 #"threshold"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"inner"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 7 #"POPSIZE"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"percentage"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")) "
0 0 14 3 10 #"population"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-from-percentage"
0 0 24 3 1 #" "
0 0 14 3 10 #"percentage"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 3 #"res"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cut"
0 0 24 3 1 #" "
0 0 14 3 10 #"percentage"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"which"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"output"
0 0 24 3 2 #" ("
0 0 14 3 7 #"get-nth"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 1 #" "
0 0 14 3 5 #"which"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 3 #") ("
0 0 14 3 6 #"mutate"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 10 #"turn-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"step"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 10 #"turn-right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"turn-left"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 6 #"output"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"next-wave"
0 0 24 3 1 #" "
0 0 14 3 14 #"new-population"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 2 #" ("
0 0 14 3 7 #"POPSIZE"
0 0 24 3 4 #")) ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 6 #"mutate"
0 0 24 3 1 #" "
0 0 14 3 14 #"new-population"
0 0 24 3 5 #"))) ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 6 #"mutate"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #") "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"next-wave"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-from-percentage"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 14 #"new-population"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 3 #") ("
0 0 14 3 7 #"POPSIZE"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"get-next-pop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"get-nth"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-pop"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-pop"
0 0 24 3 4 #"))) "
0 0 14 3 10 #"population"
0 0 24 3 2 #") "
0 0 14 3 7 #"old-pop"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"next-wave"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eval-pop"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 1 #" "
0 0 14 3 4 #"best"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 8 #"evaluate"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 24 3 1 #" "
0 0 14 3 10 #"thresholds"
0 0 24 3 1 #" "
0 0 14 3 10 #"stack-size"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"best-score"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"new-pop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")) "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"best-code"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-pop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"best-code"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 9 #" ())))) ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"best-code"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"is-less?"
0 0 24 3 1 #" "
0 0 14 3 10 #"best-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"best"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"best-score"
0 0 24 3 1 #" "
0 0 14 3 9 #"best-code"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"newline"
0 0 24 3 3 #") ("
0 0 14 3 12 #"flush-output"
0 0 24 3 3 #") ("
0 0 14 3 8 #"eval-pop"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-next-pop"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-pop"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 2 #") "
0 0 14 3 10 #"best-score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"eval-pop"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-next-pop"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-pop"
0 0 24 3 1 #" "
0 0 14 3 10 #"population"
0 0 24 3 2 #") "
0 0 14 3 4 #"best"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"eval-pop"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-initial"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 6 #"999999"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0           0
